<!doctype html>
<html lang="en" class="no-js">
<head>
    <meta charset="">
  <meta http-equiv="X-UA-Compatible" content="">

  <title>Using Subdomains in Django</title>
  <meta name="description" content="">
  <meta name="author" content="Dave Fowler">

  <!--  Mobile viewport optimized: j.mp/bplateviewport -->
  <meta name="viewport" content="">

    <link rel="shortcut icon" href="/favicon.ico">
  
    <link rel="stylesheet" href="/media/bootstrap/css/bootstrap.css">
  <link rel="stylesheet" href="/media/bootstrap/css/bootstrap-responsive.css">
  
    
  </head>
<body id="using-subdomains-in-django">
    <div class="container">
            <div id="main" role="main">
          <header class="banner clearfix">
          <h1>ThingsILearned</h1>
            <h3>Something new every day... or so.</h3>                              <nav class=main_nav>
    <ul>
                <li>
            <a title="Home Page"
                class="button white"
                href="/index.html">
                Home
            </a>
        </li>        <li>
            <a title="Things I Learned"
                class="button white"
                href="/things.html">
                Things
            </a>
        </li>        <li>
            <a title="About"
                class="button white"
                href="/about.html">
                About
            </a>
        </li>    </ul>
</nav>
                    </header>
          <section class="content">
          
<div class="row">
	 <div class="span8">
	     <article class="thing">	
		 <h1>Using Subdomains in Django</h1>
		 
		 <p>Django's url dispatcher doesn't handle subdomains.  If you want/need to use subdomains you've got to use session middleware.  If you haven't written any middleware yet don't freak out, is easy.</p>
<p>There's some <a href="http://docs.djangoproject.com/en/dev/topics/http/middleware/?from=olddocs">easy documentation</a> for extra information but for our needs all you need to do is make a Class with a function called process_request.  This function gets called on any request before it is processed by the url dispatcher.  It needs to return either nothing (None) or an HttpResponse object.  Here's the code used to get the subdomain.</p>
<p>[sourcecode language="python"]
class SubdomainMiddleware:
    def process_request(self, request):
        """Parse out the subdomain from the request"""
        request.subdomain = None
        host = request.META.get('HTTP_HOST', '')
        host_s = host.replace('www.', '').split('.')
        if len(host_s) &gt; 2:
            request.subdomain = ''.join(host_s[:-2])
[/sourcecode]</p>
<p>Now your request object has a 'subdomain' attribute you can use in your views.  Alternatively you could return an HttpResponse of any sort including redirects directly from the process_request function.  Make sure to add this class to your middlware classes:</p>
<p>[sourcecode language="python"]
MIDDLEWARE_CLASSES = (
    'path.to.middlware.SubdomainMiddleware', )
[/sourcecode]</p>
<p>Using subdomains on localhost can be a pain.  To do so sudo edit your /etc/hosts file and add the following lines replacing test.com with whatever you want to call your test url and the subdomains with your site's subdomains.</p>
<pre><code>127.0.0.1     test.com
127.0.0.1     subdomain1.test.com
127.0.0.1     subdomain2.test.com
</code></pre>
<p>This locally alters the DNS for test.com so you can use it as your localhost testing url.  Unfortunately the hosts file has no *.test.com functionality to handle redirecting all subdomains so this method only works if you have a known, finite set of subdomains.  If that's not the case you're going to have to use a development server or set up a proxy. </p>
<p><strong>Update:</strong> I also forgot to mention that if you want your login sessions to work across all subdomains you can change the SESSION_COOKIE_DOMAIN variable as follows:</p>
<p>[sourcecode language="python"]
SESSION_COOKIE_DOMAIN = '.mysite.com'
[/sourcecode]</p>		 </article>
    </div>
</div>
          </section>
      </div>
      </div> <!--! end of #container -->
    
    <script type="text/javascript" src="/media/bootstrap/js/bootstrap.js"></script>
  
        </body>
</html>